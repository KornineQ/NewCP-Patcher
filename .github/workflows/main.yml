name: Build NCPPatcher

# Controls when the action will run. 
on:
  # Triggers the workflow on push for production branch
  push:
    branches: 
       - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build NCPPatcher
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
          
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |  
          yarn
          python3 -m ensurepip --upgrade
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools

      - name: Install flatpak
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install flatpak -y --fix-missing 
          sudo apt-get install flatpak-builder -y --fix-missing
          sudo apt-get install elfutils -y --fix-missing
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install flathub org.freedesktop.Platform/x86_64/22.08 org.freedesktop.Sdk/x86_64/22.08 org.electronjs.Electron2.BaseApp/x86_64/22.08 -y
          git config --global --add protocol.file.allow always

      - name: Make and Publish (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |  
          yarn run publish
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}

      - name: Make and Publish (WINDOWS)
        if: startsWith(matrix.os, 'windows')
        run: |
          yarn run publish-windows
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
        
      - name: Make and Publish (MAC)
        if: startsWith(matrix.os, 'macos')
        run: | 
          npm install macos-alias
          yarn run publish-mac
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}


      - name: Create Release
        id: create_release
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          gh release create $TAG_NAME out/make/**/*.exe out/make/**/*.dmg out/make/**/*.AppImage out/make/**/*.zip --title "Release $TAG_NAME" --notes "Automated release created by GitHub Actions."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Ensure you have this secret set up

      - name: Upload Artifacts
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'windows') || startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@v3
        with:
          name: NCPPatcher-Release-${{ env.TAG_NAME }}
          path: out/make/**/*
